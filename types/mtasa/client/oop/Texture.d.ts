// Autogenerated file.
// DO NOT EDIT. ANY CHANGES WILL BE OVERWRITTEN

import {
    ProgressBar,
    Gui,
    EngineTXD,
    EngineDFF,
    EngineCOL,
    EngineIFP,
    PrimitiveType,
    ObjectGroup,
    Matrix,
    Browser,
    Light,
    Effect,
    Searchlight,
    Weapon,
    GuiBrowser,
    GuiMemo,
    GuiElement,
    GuiEdit,
    GuiScrollBar,
    GuiWindow,
    Projectile,
    Material,
    Userdata,
    TextItem,
    Pickup,
    Request,
    Player,
    Blip,
    ColShape,
    Element,
    Ped,
    Resource,
    Team,
    Vehicle,
    XmlNode,
    File,
    Marker,
    MTASAObject,
    RadarArea,
    Water,
    Timer,
    HandleFunction
} from '../structure';

/** @customConstructor Texture */
export class Texture extends Material {
    /**
     * This function fetches the Texture_pixels|pixels from a texture element. It can be used
     * with a standard texture, render target or screen source.
     * *This function is slow and not something you want to be doing once a frame.
     * *It is slower when reading pixels from a render target or screen source.
     * *And is very slow indeed if the texture format is not  argb .
     * @see {@link https://wiki.multitheftauto.com/wiki/DxGetTexturePixels Wiki, dxGetTexturePixels }
     * @param texture The texture element to get the pixels from
     * @param x Rectangle left position
     * @param y Rectangle top position
     * @param width Rectangle width
     * @param height Rectangle height
     * @return returns a plain format pixels string if successful, false if invalid arguments were
     * passed to the function.
     */
    getPixels(
        texture: Element,
        x?: number,
        y?: number,
        width?: number,
        height?: number
    ): string;

    /**
     * This functions allows you to change the edge handling after creating the texture.
     * @see {@link https://wiki.multitheftauto.com/wiki/DxSetTextureEdge Wiki, dxSetTextureEdge }
     * @param textureEdge The texture edge mode. Available modes are wrap, mirror, clamp, border, mirror-once
     * @param border-color If textureEdge is set to border, you are able to define a border color here
     */
    setEdge(
        textureEdge: string,
        border_color?: number
    ): boolean;

    /**
     * This function sets the Texture_pixels|pixels of a texture element. It can be used with a
     * standard texture, render target or screen source. Only plain format pixels please.
     * * This function is slow and not something you want to be doing once a frame.
     * * It is very slow when setting pixels to a render target or screen source.
     * * And is very slow indeed if the texture format is not argb.
     * @see {@link https://wiki.multitheftauto.com/wiki/DxSetTexturePixels Wiki, dxSetTexturePixels }
     * @param texture The texture element to set the pixels of
     * @param pixels The plain format pixels to use
     * @param x Rectangle left position
     * @param y Rectangle top position
     * @param width Rectangle width
     * @param height Rectangle height
     * @return returns a string if successful, false if invalid arguments were passed to the function.
     */
    setPixels(
        texture: Element,
        pixels: string,
        x?: number,
        y?: number,
        width?: number,
        height?: number
    ): boolean;
}
