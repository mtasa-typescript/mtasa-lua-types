// Autogenerated file.
// DO NOT EDIT. ANY CHANGES WILL BE OVERWRITTEN

import {
    ProgressBar,
    Gui,
    EngineTXD,
    EngineDFF,
    EngineCOL,
    EngineIFP,
    PrimitiveType,
    Texture,
    ObjectGroup,
    Matrix,
    Browser,
    Light,
    Effect,
    Searchlight,
    Weapon,
    GuiBrowser,
    GuiMemo,
    GuiElement,
    GuiEdit,
    GuiScrollBar,
    GuiWindow,
    Projectile,
    Material,
    Userdata,
    TextItem,
    Pickup,
    Request,
    Player,
    Blip,
    ColShape,
    Element,
    Ped,
    Resource,
    Team,
    Vehicle,
    XmlNode,
    File,
    Marker,
    MTASAObject,
    RadarArea,
    Water,
    Timer,
    HandleFunction
} from '../structure';

/** @customConstructor DxTexture */
export class DxTexture {
    /**
     * This function creates a texture element that can be used in the dxDraw functions.
     * It is possible to use dxCreateTexture to load cubemaps and volume textures, but these
     * will only be useable as inputs for a shader. The Microsoft utility
     * http://nightly.mtasa.com/files/shaders/DxTex.zip DxTex can view and change cubemaps and
     * volume textures. DxTex can also convert standard textures into DXT1/3/5 compressed .dds
     * which should reduce file sizes.
     * @see {@link https://wiki.multitheftauto.com/wiki/DxCreateTexture Wiki, dxCreateTexture }
     * @param filepath The filepath of the image. (.bmp, .dds, .jpg, .png, and .tga images are supported). Image
     * files should ideally have dimensions that are a power of two, to prevent possible
     * blurring.
     * or
     * @param width Desired width, preferably power of two (16, 32, 64 etc.), maximum is 16384
     * @param height Desired height, preferably power of two (16, 32, 64 etc.), maximum is 16384
     * @param argb : ARGB uncompressed 32 bit color (default).
     * @param dxt1 : DXT1 compressed - Can take a fraction of a second longer to load (unless the file is
     * already a DXT1 .dds). Uses 8 times less video memory than ARGB and can speed up drawing.
     * Quality not as good as ARGB. It supports alpha blending, but it can only be on or off,
     * that is: either 0 or 255.
     * @param dxt3 : DXT3 compressed - Can take a fraction of a second longer to load (unless the file is
     * already a DXT3 .dds). Uses 4 times less video memory than ARGB and can speed up drawing.
     * Quality slightly better than DXT1 and supports crisp alpha blending.
     * @param dxt5 : DXT5 compressed - Can take a fraction of a second longer to load (unless the file is
     * already a DXT5 .dds). Uses 4 times less video memory than ARGB and can speed up drawing.
     * Quality slightly better than DXT1 and supports smooth alpha blending.
     * @param mipmaps True to create a mip-map chain so the texture looks good when drawn at various sizes.
     * @param textureEdge A string representing the desired texture edge handling, which can be one of:
     * @param wrap : Wrap the texture at the edges (default)
     * @param clamp : Clamp the texture at the edges. This may help avoid edge artifacts.
     * @param mirror : Mirror the texture at the edges.
     * @param textureType A string representing the desired texture type, which can be one of:
     * @param 2d : Standard texture (default)
     * @param 3d : Volume texture
     * @param cube : Cube map
     * @param depth Desired number of slices when creating a volume texture
     * @return returns a texture if successful, false if invalid arguments were passed to the function.
     */
    constructor(
        mipmaps?: boolean,
        textureEdge?: string
    );
}
