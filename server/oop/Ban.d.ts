// Autogenerated file.
// DO NOT EDIT. ANY CHANGES WILL BE OVERWRITTEN

import {
    TextDisplay,
    Account,
    ACL,
    ACLGroup,
    XML,
    Userdata,
    TextItem,
    Pickup,
    Request,
    Player,
    Blip,
    ColShape,
    Element,
    Ped,
    Resource,
    Team,
    Vehicle,
    XmlNode,
    File,
    Marker,
    MTASAObject,
    RadarArea,
    Water,
    Timer,
    HandleFunction,
    TimerCallbackFunction,
    FetchRemoteCallback,
    GenericEventHandler,
    CommandHandler,
    BindKeyCallback,
    BindKeyCallbackVarArgs,
    ControlName,
    KeyName,
    KeyState,
    Vector2,
    Vector3,
    Vector4,
    Matrix,
} from '../structure';

/** @customConstructor Ban */
export class Ban {
    /**
     * This function will return the responsible admin (nickname of the admin) of the specified
     * ban.
     */
    admin: string;

    /**
     * This function will return the IP of the specified ban.
     */
    ip: string;

    /**
     * This function will return the nickname (nickname that the player had when he was banned)
     * of the specified ban.
     */
    nick: string;

    /**
     * This function will return the ban reason of the specified ban.
     */
    reason: string;

    /**
     * This function will return the serial of the specified ban.
     */
    serial: string;

    /**
     * This function will return the time the specified ban was created, in seconds.
     */
    time: number;

    /**
     * This function will return the unbanning time of the specified ban in seconds.
     */
    unbanTime: number;

    /**
     * This function will add a ban for the specified IP/username/serial to the server.
     * @see https://wiki.multitheftauto.com/wiki/AddBan
     * @param IP The IP to be banned. If you dont want to ban by IP, set this to nil.
     * '''or'''
     * @param Username The http://community.mtasa.com/ MTA Community username to be banned (now obsolete). If
     * you dont want to ban by username, set this to nil.
     * '''or'''
     * @param Serial The serial to be banned. If you dont want to ban by serial, set this to nil.
     * ''' or any combination.'''
     * @param responsibleElement The element that is responsible for banning the IP/username/serial. This can be a player
     * or the root (getRootElement()).
     * @param reason The reason the IP/username/serial will be banned from the server.
     * @param seconds The amount of seconds the player will be banned from the server for. This can be 0 for an
     * infinite amount of time.
     * @return returns the new ban if the ip/username/serial was banned successfully, false if invalid
     * arguments are specified.
     */
    constructor(
        IP?: string,
        Username?: string,
        Serial?: string,
        responsibleElement?: Player,
        reason?: string,
        seconds?: number,
    );

    /**
     * This function will return the responsible admin (nickname of the admin) of the specified
     * ban.
     * @see https://wiki.multitheftauto.com/wiki/GetBanAdmin
     * @return returns a string of the admin if everything was successful, false if invalid arguments
     * are specified if there was no admin specified for the ban.
     */
    getAdmin(): string;

    /**
     * This function will return the IP of the specified ban.
     * @see https://wiki.multitheftauto.com/wiki/GetBanIP
     * @return returns a string of the ip if everything was successful, false if invalid arguments are
     * specified if there was no ip specified for the ban.
     */
    getIP(): string;

    /**
     * This function will return the nickname (nickname that the player had when he was banned)
     * of the specified ban.
     * @see https://wiki.multitheftauto.com/wiki/GetBanNick
     * @return returns a string of the nickname if everything was successfull, false if invalid
     * arguments are specified if there was no nickname specified for the ban element.
     */
    getNick(): string;

    /**
     * This function will return the ban reason of the specified ban.
     * @see https://wiki.multitheftauto.com/wiki/GetBanReason
     * @return returns a string of the reason if everything was successful, false if invalid arguments
     * are specified if there was no reason specified for the ban.
     */
    getReason(): string;

    /**
     * This function will return a table containing all the bans present in the servers
     * banlist.xml.
     * @see https://wiki.multitheftauto.com/wiki/GetBans
     * @return returns a table containing all the bans.
     */
    static getList(): LuaTable;

    /**
     * This function will return the serial of the specified ban.
     * @see https://wiki.multitheftauto.com/wiki/GetBanSerial
     * @return returns a string of the serial if everything was successful, false if invalid arguments
     * are specified or if there was no serial specified for the ban.
     */
    getSerial(): string;

    /**
     * This function will return the time the specified ban was created, in seconds.
     * @see https://wiki.multitheftauto.com/wiki/GetBanTime
     * @return * returns an integer of the banning time in the format of seconds from the year 1970.
     * use in conjunction with getrealtime in order to retrieve detailed information.
     * * returns false if invalid arguments were specified or if there was no banning time
     * specified for the ban.
     */
    getTime(): number;

    /**
     * This function will return the unbanning time of the specified ban in seconds.
     * @see https://wiki.multitheftauto.com/wiki/GetUnbanTime
     * @return * returns an integer of the unbanning time in the format of seconds from the year 1970.
     * use in conjunction with getrealtime in order to retrieve detailed information.
     * * returns false if invalid arguments are specified or if there was no unbanning time
     * specified for the ban.
     */
    getUnbanTime(): number;

    /**
     * This function will reload the server ban list file.
     * @see https://wiki.multitheftauto.com/wiki/ReloadBans
     * @return returns true if the ban list was reloaded successfully, false otherwise.
     */
    static reload(): boolean;

    /**
     * This function will remove a specific ban.
     * @see https://wiki.multitheftauto.com/wiki/RemoveBan
     * @param responsibleElement The element that is responsible for removing the ban element. This can be a player or the
     * root (getRootElement()).
     * @return returns true if the ban was removed succesfully, false if invalid arguments are specified.
     */
    remove(responsibleElement?: Player): boolean;

    /**
     * This function sets a new admin for a ban.
     * @see https://wiki.multitheftauto.com/wiki/SetBanAdmin
     * @param theAdmin The new admin.
     * @return returns true if changed, false otherwise.
     */
    setAdmin(theAdmin: string): boolean;

    /**
     * @see https://wiki.multitheftauto.com/wiki/SetBanNick
     * @param theNick A string representing the nick you want to set the ban to.
     * @return returns true if changed, false otherwise.
     */
    setNick(theNick: string): boolean;

    /**
     * This function sets the reason for the specified ban.
     * @see https://wiki.multitheftauto.com/wiki/SetBanReason
     * @param theReason the new reason (max 60 characters).
     * @return returns true if the new reason was set successfully, false otherwise.
     */
    setReason(theReason: string): boolean;

    /**
     * This function sets a new unban time of a given ban using unix timestamp (seconds since
     * Jan 01 1970).
     * @see https://wiki.multitheftauto.com/wiki/SetUnbanTime
     * @param theTime the new unban time
     * @return returns true if changed successfully, false otherwise.
     */
    setUnbanTime(theTime: number): boolean;
}
