// Autogenerated file.
// DO NOT EDIT. ANY CHANGES WILL BE OVERWRITTEN

import {
    TextDisplay,
    Account,
    ACL,
    Ban,
    XML,
    Userdata,
    TextItem,
    Pickup,
    Request,
    Player,
    Blip,
    ColShape,
    Element,
    Ped,
    Resource,
    Team,
    Vehicle,
    XmlNode,
    File,
    Marker,
    MTASAObject,
    RadarArea,
    Water,
    Timer,
    HandleFunction,
    TimerCallbackFunction,
    FetchRemoteCallback,
    GenericEventHandler,
    CommandHandler,
    BindKeyCallback,
    BindKeyCallbackVarArgs,
    ControlName,
    KeyName,
    KeyState,
    Vector2,
    Vector3,
    Vector4,
    Matrix,
} from '../structure';

/** @customConstructor ACLGroup */
export class ACLGroup {
    /**
     * This function is used to get the name of the given ACL group.
     */
    name: string;

    /**
     * This function returns a table over all the ACLs that exist in a given ACL group.
     */
    aclList: LuaTable;

    /**
     * This function returns a table over all the objects that exist in a given ACL group. These
     * are objects like players and resources.
     */
    objects: LuaTable;

    /**
     * This function creates a group in the ACL. An ACL group can contain objects like players
     * and resources. They specify who has access to the ACLs in this group.
     * @see https://wiki.multitheftauto.com/wiki/AclCreateGroup
     * @param groupName The name of the group to create
     * @return returns the pointer to the created aclgroup if successful. returns false if failed.
     */
    constructor(groupName: string);

    /**
     * This function destroys the given ACL group. The destroyed ACL group will no longer be
     * valid.
     * @see https://wiki.multitheftauto.com/wiki/AclDestroyGroup
     * @return returns true if the acl group was successfully deleted, false if it could not be deleted
     * for some reason (ie. invalid argument).
     */
    destroy(): boolean;

    /**
     * This function is used to get the ACL group with the given name. If you need most of the
     * groups you should consider using aclGroupList instead to get a table containing them all.
     * @see https://wiki.multitheftauto.com/wiki/AclGetGroup
     * @param groupName The name to get the ACL group from
     * @return returns the acl group if it could be found. returns false/nil if it did not exist or
     * failed for some reason.
     */
    static get(groupName: string): ACLGroup;

    /**
     * This function adds the given ACL to the given ACL group. This makes the resources and
     * players in the given ACL group have access to whats specified in the given ACL. The
     * rights for something in the different ACLs in a group are OR-ed together, which means if
     * one ACL gives access to something, this ACL group will have access to that.
     * @see https://wiki.multitheftauto.com/wiki/AclGroupAddACL
     * @param theACL The ACL to add to the group
     * @return returns true if the acl could be successfully added to the acl group, false/nil if either
     * of the elements are invalid, the acl is already in that group or if something else goes
     * wrong.
     */
    addACL(theACL: ACL): boolean;

    /**
     * This function adds an object to the given ACL group. An object can be a players account,
     * specified as:
     * user.<accountname>
     * Or a resource, specified as:
     * resource.<resourcename>
     * Objects are specified as strings. The ACL groups work for the user accounts and the
     * resources that are specified in them.
     * @see https://wiki.multitheftauto.com/wiki/AclGroupAddObject
     * @param theObjectName The object string to add to the given ACL.
     * @return returns true if the object was successfully added to the acl, false if it already existed
     * in the list.
     */
    addObject(theObjectName: string): boolean;

    /**
     * This function is used to get the name of the given ACL group.
     * @see https://wiki.multitheftauto.com/wiki/AclGroupGetName
     * @return returns the name of the given acl group as a string if successful, otherwise false or nil
     * if the aclgroup is invalid or it fails for some other reason.
     */
    getName(): string;

    /**
     * This function returns a table of all the ACL groups.
     * @see https://wiki.multitheftauto.com/wiki/AclGroupList
     * @return returns a table of all the acl groups if successful, returns an empty table if no acl
     * groups exist. false/nil can be returned if this function fails for some other reason.
     */
    static list(): LuaTable;

    /**
     * This function returns a table over all the ACLs that exist in a given ACL group.
     * @see https://wiki.multitheftauto.com/wiki/AclGroupListACL
     * @return returns a table of the acl elements in the given acl group. this table might be empty.
     * returns false or nil if thegroup is invalid or it fails for some other reason.
     */
    listACL(): LuaTable;

    /**
     * This function returns a table over all the objects that exist in a given ACL group. These
     * are objects like players and resources.
     * @see https://wiki.multitheftauto.com/wiki/AclGroupListObjects
     * @return returns a table of strings in the given acl group. this table might be empty. returns
     * false or nil if thegroup is invalid or it fails for some other reason.
     */
    listObjects(): LuaTable;

    /**
     * This function removes the given ACL from the given ACL group.
     * @see https://wiki.multitheftauto.com/wiki/AclGroupRemoveACL
     * @param theACL The ACL to remove from the given group
     * @return returns true if the acl was successfully removed from the acl group, false/nil if it
     * could not be removed for some reason, ie. either of the elements were invalid.
     */
    removeACL(theACL: ACL): boolean;

    /**
     * This function removes the given object from the given ACL group. The object can be a
     * resource or a player. See aclGroupAddObject for more details.
     * @see https://wiki.multitheftauto.com/wiki/AclGroupRemoveObject
     * @param theObjectString The object to remove from the ACL group
     * @return returns true if the object existed in the acl and could be remoevd, false if it could not
     * be removed for some reason, ie. it did not exist in the given acl group.
     */
    removeObject(theObjectString: string): boolean;

    /**
     * This function is used to determine if an object is in a group.
     * @see https://wiki.multitheftauto.com/wiki/IsObjectInACLGroup
     * @param theObjectName the name of the object to check. Examples: resource.ctf, user.Jim.
     * @param theGroup the ACL group pointer of the group from which the object should be found.
     * @return returns true if the object is in the specified group, false otherwise.
     */
    doesContainObject(theObjectName: string, theGroup: ACLGroup): boolean;
}
