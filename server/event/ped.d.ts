// Autogenerated file.
// DO NOT EDIT. ANY CHANGES WILL BE OVERWRITTEN

import { EventNames } from './all_event_names';
import {
    TextDisplay,
    Account,
    ACL,
    ACLGroup,
    Ban,
    XML,
    Userdata,
    TextItem,
    Pickup,
    Request,
    Player,
    Blip,
    ColShape,
    Element,
    Ped,
    Resource,
    Team,
    Vehicle,
    XmlNode,
    File,
    Marker,
    MTASAObject,
    RadarArea,
    Water,
    Timer,
    HandleFunction,
    TimerCallbackFunction,
    FetchRemoteCallback,
    GenericEventHandler,
    CommandHandler,
    BindKeyCallback,
    BindKeyCallbackVarArgs,
    ControlName,
    KeyName,
    KeyState,
    Vector2,
    Vector3,
    Vector4,
    Matrix,
} from '../structure';

export interface OnPedDamage extends GenericEventHandler {
    name: EventNames.OnPedDamage;
    function: (this: void, loss: number) => void;
}

export interface OnPedVehicleEnter extends GenericEventHandler {
    name: EventNames.OnPedVehicleEnter;
    function: (
        this: void,
        theVehicle: Vehicle,
        seat: number,
        jacked: Ped,
    ) => void;
}

export interface OnPedVehicleExit extends GenericEventHandler {
    name: EventNames.OnPedVehicleExit;
    function: (
        this: void,
        theVehicle: Vehicle,
        seat: number,
        jacker: Ped,
        forcedByScript: boolean,
    ) => void;
}

export interface OnPedWasted extends GenericEventHandler {
    name: EventNames.OnPedWasted;
    function: (
        this: void,
        totalAmmo: number,
        killer: Element,
        killerWeapon: number,
        bodypart: number,
        stealth: boolean,
    ) => void;
}

export interface OnPedWeaponSwitch extends GenericEventHandler {
    name: EventNames.OnPedWeaponSwitch;
    function: (
        this: void,
        previousWeaponID: number,
        currentWeaponID: number,
    ) => void;
}
