// Autogenerated file.
// DO NOT EDIT. ANY CHANGES WILL BE OVERWRITTEN

import { EventNames } from './all_event_names';
import {
    ProgressBar,
    Gui,
    EngineTXD,
    EngineDFF,
    EngineCOL,
    EngineIFP,
    PrimitiveType,
    DxTexture,
    ObjectGroup,
    Browser,
    Light,
    Effect,
    Searchlight,
    Weapon,
    GuiBrowser,
    GuiMemo,
    GuiElement,
    GuiEdit,
    GuiScrollBar,
    GuiWindow,
    Projectile,
    Material,
    Svg,
    SvgCallback,
    Userdata,
    TextItem,
    Pickup,
    Request,
    Player,
    Blip,
    ColShape,
    Element,
    Ped,
    Resource,
    Team,
    Vehicle,
    XmlNode,
    File,
    Marker,
    MTASAObject,
    RadarArea,
    Water,
    Timer,
    HandleFunction,
    TimerCallbackFunction,
    FetchRemoteCallback,
    GenericEventHandler,
    CommandHandler,
    BindKeyCallback,
    BindKeyCallbackVarArgs,
    ControlName,
    KeyName,
    KeyState,
    Vector2,
    Vector3,
    Vector4,
    Matrix,
} from '../structure';

export interface OnClientBrowserCreated extends GenericEventHandler {
    name: EventNames.OnClientBrowserCreated;
    function: (this: void) => void;
}

export interface OnClientBrowserCursorChange extends GenericEventHandler {
    name: EventNames.OnClientBrowserCursorChange;
    function: (this: void, cursorId: number) => void;
}

export interface OnClientBrowserDocumentReady extends GenericEventHandler {
    name: EventNames.OnClientBrowserDocumentReady;
    function: (this: void, url: string) => void;
}

export interface OnClientBrowserInputFocusChanged extends GenericEventHandler {
    name: EventNames.OnClientBrowserInputFocusChanged;
    function: (this: void, gainedFocus: boolean) => void;
}

export interface OnClientBrowserLoadingFailed extends GenericEventHandler {
    name: EventNames.OnClientBrowserLoadingFailed;
    function: (
        this: void,
        url: string,
        errorCode: number,
        errorDescription: string,
    ) => void;
}

export interface OnClientBrowserLoadingStart extends GenericEventHandler {
    name: EventNames.OnClientBrowserLoadingStart;
    function: (this: void, URL: string, isMain: boolean) => void;
}

export interface OnClientBrowserNavigate extends GenericEventHandler {
    name: EventNames.OnClientBrowserNavigate;
    function: (
        this: void,
        targetURL: string,
        isBlocked: boolean,
        isMainFrame: boolean,
    ) => void;
}

export interface OnClientBrowserPopup extends GenericEventHandler {
    name: EventNames.OnClientBrowserPopup;
    function: (
        this: void,
        targetURL: string,
        openerURL: string,
        isPopup: boolean,
    ) => void;
}

export interface OnClientBrowserResourceBlocked extends GenericEventHandler {
    name: EventNames.OnClientBrowserResourceBlocked;
    function: (this: void, url: string, domain: string, reason: number) => void;
}

export interface OnClientBrowserTooltip extends GenericEventHandler {
    name: EventNames.OnClientBrowserTooltip;
    function: (this: void, text: string) => void;
}

export interface OnClientBrowserWhitelistChange extends GenericEventHandler {
    name: EventNames.OnClientBrowserWhitelistChange;
    function: (this: void, changedDomains: LuaTable) => void;
}
