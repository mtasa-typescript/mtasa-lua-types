// Autogenerated file.
// DO NOT EDIT. ANY CHANGES WILL BE OVERWRITTEN

import {
    ProgressBar,
    Gui,
    EngineTXD,
    EngineDFF,
    EngineCOL,
    EngineIFP,
    PrimitiveType,
    DxTexture,
    ObjectGroup,
    Browser,
    Light,
    Effect,
    Searchlight,
    Weapon,
    GuiBrowser,
    GuiElement,
    GuiEdit,
    GuiScrollBar,
    GuiWindow,
    Projectile,
    Material,
    Svg,
    SvgCallback,
    Userdata,
    TextItem,
    Pickup,
    Request,
    Player,
    Blip,
    ColShape,
    Element,
    Ped,
    Resource,
    Team,
    Vehicle,
    XmlNode,
    File,
    Marker,
    MTASAObject,
    RadarArea,
    Water,
    Timer,
    HandleFunction,
    TimerCallbackFunction,
    FetchRemoteCallback,
    GenericEventHandler,
    CommandHandler,
    BindKeyCallback,
    BindKeyCallbackVarArgs,
    ControlName,
    KeyName,
    KeyState,
    Vector2,
    Vector3,
    Vector4,
    Matrix,
} from '../../structure';

/** @customConstructor GuiMemo */
export class GuiMemo extends GuiElement {
    /**
     * This function returns the caret (the text cursor) position within the memo box.
     */
    caretIndex: number;

    /**
     */
    verticalScrollPosition: number;

    /**
     */
    readOnly: boolean;

    /**
     * This function creates a new GUI memo.  This is a multiline edit box in which the user can
     * input text.
     * @see https://wiki.multitheftauto.com/wiki/GuiCreateMemo
     * @param x A float of the 2D x position of the GUI memo on a players screen.  This is affected by
     * the relative argument.
     * @param y A float of the 2D y position of the GUI memo on a players screen. This is affected by the
     * relative argument.
     * @param width A float of the width of the GUI memo. This is affected by the relative argument.
     * @param height A float of the height of the GUI memo. This is affected by the relative argument.
     * @param text A string of the text that will be displayed by default in the memo.
     * @param relative This is whether sizes and positioning are relative.  If this is true, then all
     * x,y,width,height floats must be between 0 and 1, representing measures relative to the
     * parent.
     * @param parent This is the parent that the GUI memo is attached to.  If the relative argument is true,
     * sizes and positioning will be made relative to this parent. If the relative argument is
     * false, positioning will be the number of offset pixels from the parents origin. If no
     * parent is passed, the parent will become the screen - causing positioning and sizing
     * according to screen positioning.
     * @return returns a gui-memo element of the created memo if it was successfully created, false
     * otherwise.
     */
    constructor(
        x: number,
        y: number,
        width: number,
        height: number,
        text: string,
        relative: boolean,
        parent?: Element,
    );

    /**
     * This function returns the caret (the text cursor) position within the memo box.
     * @see https://wiki.multitheftauto.com/wiki/GuiMemoGetCaretIndex
     * @return returns the caret index on success, false otherwise.
     */
    getCaretIndex(): number;

    /**
     * @see https://wiki.multitheftauto.com/wiki/GuiMemoGetVerticalScrollPosition
     * @return returns a float ranging between 0 and 100, or false otherwise.
     */
    getVerticalScrollPosition(): number;

    /**
     * @see https://wiki.multitheftauto.com/wiki/GuiMemoIsReadOnly
     * @return returns true if the memo is read only, false if the memo isnt read only, nil otherwise.
     */
    isReadOnly(): boolean;

    /**
     * This function sets the current position of the caret (the text cursor) within the memo.
     * @see https://wiki.multitheftauto.com/wiki/GuiMemoSetCaretIndex
     * @param index An integer referring to the desired character position within the box. 0 would be before
     * the first character in the box, 1 before the second, etc.
     * @return returns true if the caret was successfully moved, false otherwise.
     */
    setCaretIndex(index: number): boolean;

    /**
     * This function allows you to set or remove read-only status for a GUI memo. If read-only
     * is set to true, the contents are not editable.
     * @see https://wiki.multitheftauto.com/wiki/GuiMemoSetReadOnly
     * @param status A boolean value indicating whether read-only is to be enabled or disabled.
     * @return returns true if the status was successfully changed, false otherwise.
     */
    setReadOnly(status: boolean): boolean;

    /**
     * @see https://wiki.multitheftauto.com/wiki/GuiMemoSetVerticalScrollPosition
     * @param position : a float ranging between 0 and 100.
     * @return returns true if the position was set, false otherwise.
     */
    setVerticalScrollPosition(position: number): boolean;
}
