// Autogenerated file.
// DO NOT EDIT. ANY CHANGES WILL BE OVERWRITTEN

import {
    ProgressBar,
    Gui,
    EngineTXD,
    EngineDFF,
    EngineCOL,
    EngineIFP,
    PrimitiveType,
    DxTexture,
    ObjectGroup,
    Browser,
    Light,
    Effect,
    Searchlight,
    Weapon,
    GuiBrowser,
    GuiMemo,
    GuiElement,
    GuiEdit,
    GuiScrollBar,
    GuiWindow,
    Projectile,
    Material,
    Svg,
    SvgCallback,
    Userdata,
    TextItem,
    Pickup,
    Request,
    Player,
    Blip,
    ColShape,
    Element,
    Ped,
    Resource,
    Vehicle,
    XmlNode,
    File,
    Marker,
    MTASAObject,
    RadarArea,
    Water,
    Timer,
    HandleFunction,
    TimerCallbackFunction,
    FetchRemoteCallback,
    GenericEventHandler,
    CommandHandler,
    BindKeyCallback,
    BindKeyCallbackVarArgs,
    ControlName,
    KeyName,
    KeyState,
    Vector2,
    Vector3,
    Vector4,
    Matrix,
} from '../structure';

/** @customConstructor Team */
export class Team extends Element {
    /**
     * This function is for returning the number of players in the specified team.
     */
    playerCount: number;

    /**
     * This function retrieves all the players of the specified team.
     */
    players: LuaTable;

    /**
     * This function tells you if friendly fire is turned on for the specified team.
     */
    friendlyFire: boolean;

    /**
     * This function gets the team name of a team object.
     */
    name: string;

    /**
     * This function is for returning the number of players in the specified team.
     * @see https://wiki.multitheftauto.com/wiki/CountPlayersInTeam
     * @return returns an integer containing the number of players in the team, false if it could not be
     * retrieved.
     */
    countPlayers(): number;

    /**
     * This function retrieves all the players of the specified team.
     * @see https://wiki.multitheftauto.com/wiki/GetPlayersInTeam
     * @return returns a table of all the players in the team, or an empty one if there are none else
     * false if invalid arguments are passed.
     */
    getPlayers(): LuaTable;

    /**
     * This function retrieves the color of a team.
     * @see https://wiki.multitheftauto.com/wiki/GetTeamColor
     * @return returns 3 integers representing the red, green, and blue color components of the team if
     * its valid, false otherwise.
     */
    getColor(): LuaMultiReturn<[number, number, number]>;

    /**
     * This function tells you if friendly fire is turned on for the specified team.
     * @see https://wiki.multitheftauto.com/wiki/GetTeamFriendlyFire
     * @return returns true if friendly fire is on for the specified team, false if it is turned off or
     * if invalid arguments are specified.
     */
    getFriendlyFire(): boolean;

    /**
     * This function finds a team element using the provided team name.
     * @see https://wiki.multitheftauto.com/wiki/GetTeamFromName
     * @param teamName A string determining the name of the team you wish to find.
     * @return returns the team element if it was found, false otherwise.
     */
    static getFromName(teamName: string): Team;

    /**
     * This function gets the team name of a team object.
     * @see https://wiki.multitheftauto.com/wiki/GetTeamName
     * @return returns a string representing the teams name if the team object was valid, false
     * otherwise.
     */
    getName(): string;
}
